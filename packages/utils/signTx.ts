// Add ethers.js to the page dynamically
const script = document.createElement("script");
script.src = "https://cdn.jsdelivr.net/npm/ethers@5.7.2/dist/ethers.umd.min.js";
document.head.appendChild(script);

// Wait for ethers to load
script.onload = async () => {
  // Get the transaction object (assuming you have it stored in a variable)
  const txObject = {
    from: "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    to: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    data: "0xa141c65a00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003e8000000000000000000000000000000000000000000000000002386f26fc1000000000000000000000000000000000000000000000000000000470de4df820000000000000000000000000000000000000000000000000000000000000000000e4e564944494120475055204e465400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084e564944494e465400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000104e56494449412047505520546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084e56494449544b4e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005068747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d5975636b6a6a6a395a547759674837706e684c596f477a76487544454d50796e4d45707a704c334a7759347000000000000000000000000000000000",
    gasLimit: {
      type: "BigNumber",
      hex: "0x408250",
    },
    gasPrice: {
      type: "BigNumber",
      hex: "0x6591e4e3",
    },
    nonce: 1,
    chainId: 31337,
  };

  // Request wallet access
  await window.ethereum.request({ method: "eth_requestAccounts" });

  // Create provider and signer
  const provider = new ethers.providers.Web3Provider(window.ethereum);
  const signer = provider.getSigner();

  // Send the transaction
  try {
    const tx = await signer.sendTransaction(txObject);
    console.log("Transaction sent:", tx.hash);

    // Wait for confirmation
    const receipt = await tx.wait(1);
    console.log("Transaction confirmed in block:", receipt.blockNumber);
    console.log("Gas used:", receipt.gasUsed.toString());
  } catch (error) {
    console.error("Transaction failed:", error);
  }
};
